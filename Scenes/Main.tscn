[gd_scene load_steps=331 format=2]

[ext_resource path="res://Scripts/Grid.gd" type="Script" id=1]
[ext_resource path="res://Scripts/Grid Visualiser.gd" type="Script" id=2]
[ext_resource path="res://Assets/Art/GameBoard/Grid.png" type="Texture" id=3]
[ext_resource path="res://Assets/Art/GameBoard/Border.png" type="Texture" id=4]
[ext_resource path="res://Assets/Art/UI/P1-WinScreenAnim.png" type="Texture" id=5]
[ext_resource path="res://Scripts/WinTXT.gd" type="Script" id=6]
[ext_resource path="res://Assets/Art/UI/P2-WinScreenAnim.png" type="Texture" id=7]
[ext_resource path="res://Scenes/UI/P1HealthBar.tscn" type="PackedScene" id=8]
[ext_resource path="res://Scenes/UI/P2HealthBar.tscn" type="PackedScene" id=9]
[ext_resource path="res://Assets/Art/GameBoard/Index.png" type="Texture" id=10]
[ext_resource path="res://Assets/Shaders/transitionCircle.tres" type="Material" id=11]
[ext_resource path="res://Scenes/UI/P1PowerBar.tscn" type="PackedScene" id=12]
[ext_resource path="res://Assets/Art/UI/PauseTXT.png" type="Texture" id=13]
[ext_resource path="res://Scenes/Characters/Character Sprites.tscn" type="PackedScene" id=14]
[ext_resource path="res://Scenes/UI/P2PowerBar.tscn" type="PackedScene" id=15]
[ext_resource path="res://Assets/Art/GameBoard/Glow.png" type="Texture" id=16]
[ext_resource path="res://Scripts/TurnIndicator.gd" type="Script" id=17]

[sub_resource type="Shader" id=407]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/waveforms

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;
render_mode blend_premul_alpha;

uniform int lines = 80; // Amount of lines the waveform is build up of
uniform float amplitude : hint_range(0.0, 1.0) = 0.9; // Height of the wave
uniform float frequency : hint_range(0.0, 0.5) = 0.1; // Set a lower value for a smoother wave
uniform float intensity : hint_range(0.0, 1.0) = 0.75; // Lower values creates gaps in the wave while higher make the wave more solid
uniform float line_sharpness : hint_range(0.0, 1.0) = 0.5; // Fuzzy edges on each line
uniform float line_size : hint_range(0.0, 1.0) = 0.8; // Thickness of the lines
uniform float fade : hint_range(0.0, 0.5) = 0.1; // Blurres the top and bottom of the lines
uniform float rest_size : hint_range(-2., 2.) = -0.2; // The size of the lines when the line is not animating, i.e at value 0. Tweak if Fade is used.
uniform float edge : hint_range(0.0, 0.5) = 0.05; // How close to the edges should the animation beginn
uniform float speed = 0.5; // Speed of wave animation
uniform vec4 color : hint_color = vec4(.8, 0.25, 0.5, 1.0); // Color of wave
uniform bool dot_matrix = false; 
uniform int dot_matriz_size = 80;

uniform bool speech_sim = true; // Toggle to simulate speach. Will create a more erratic movement in the wave
uniform float speech_intensity : hint_range(0.0, 2.0) = 0.8; // How fast will the speech movement be
uniform float progress : hint_range(0.0, 1.0) = 1.0; // Use to turn the animation on and off from outside the shader. 0 - off, 1 - on. Can animate values between which will shrink the wave.

float random(vec2 uv) {
	return fract(sin(dot(uv.xy,
	vec2(12.9898,78.233))) * 43758.5453123);
}

float noise(vec2 uv) {
	vec2 uv_index = floor(uv);
	vec2 uv_fract = fract(uv);

	// Four corners in 2D of a tile
	float a = random(uv_index);
	float b = random(uv_index + vec2(1.0, 0.0));
	float c = random(uv_index + vec2(0.0, 1.0));
	float d = random(uv_index + vec2(1.0, 1.0));

	vec2 blur = smoothstep(0.0, 1.0, uv_fract);

	return mix(a, b, blur.x) +
				(c - a) * blur.y * (1.0 - blur.x) +
				(d - b) * blur.x * blur.y;
}

float fbm(vec2 uv) {
	int octaves = 4;
	float amp = 0.5;
	float freq = 4.;
	float value = 0.0;
	
	for(int i = 0; i < octaves; i++) {
		value += amp * noise(freq * uv - 0.5);
		amp *= 0.6;
		freq *= 2.;
	}
	return value;
}


void fragment()
{
	// Some initialising
	float time = TIME;
	vec4 c = vec4(vec3(0.0), 1.0);
	float f_columns = float(lines);
	
	// Make some distance to the edges before the animation starts
	float cutoff = smoothstep(0.0, edge, (round ((UV.x) * (f_columns) ) / f_columns) );
	cutoff *= 1. - smoothstep(1.-edge, 1.0, (round ((UV.x) * (f_columns) ) / f_columns) );

	// Speech simulation setup
	float ss = 1.0;
	if (speech_sim == true){
		ss = fbm(vec2(1.0, time * speed * 1.3) * speech_intensity) * 1.5;
	}
	
	// Create the noise that controlls the animation
	float noise = fbm(vec2( round( (UV.x) * f_columns ) * frequency, time * speed) ) * ss * progress;
	noise *= cutoff; // Apply edge cutoff
	
	// Make wave values based on the noise
	float wave = smoothstep(1.-intensity, 1.0, noise) * amplitude;
	wave = wave + (rest_size * 0.2);
	
	// Create the lines
	float line = abs( sin(( f_columns * 3.1416 * UV.x) + 1.5) );
	line = smoothstep(1.-line_size, (1.-line_size) + (1.-line_sharpness), line);
	
	// Simulate dot_matrix
	if (dot_matrix){
		float dm = abs( sin(( float(dot_matriz_size) * 3.1416 * UV.y) + 1.5) );
		dm = smoothstep(1.-line_size, (1.-line_size) + (1.-line_sharpness), dm);
		line *= dm;
	}
	
	// Duplicate mask on top an bottom and apply to line
	float mask = 1.0 - smoothstep(wave, wave + fade, abs(UV.y - 0.5) * 2.);
	line *= mask;
	
	c = vec4(line) * color;
	
	COLOR = c;
}"

[sub_resource type="ShaderMaterial" id=408]
shader = SubResource( 407 )
shader_param/lines = 80
shader_param/amplitude = 0.546
shader_param/frequency = 0.224
shader_param/intensity = 0.75
shader_param/line_sharpness = 0.0
shader_param/line_size = 0.513
shader_param/fade = 0.0
shader_param/rest_size = -0.2
shader_param/edge = 0.114
shader_param/speed = 0.5
shader_param/color = Color( 1, 1, 1, 0 )
shader_param/dot_matrix = true
shader_param/dot_matriz_size = 80
shader_param/speech_sim = false
shader_param/speech_intensity = 0.8
shader_param/progress = 1.0

[sub_resource type="AtlasTexture" id=255]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=256]
atlas = ExtResource( 5 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=257]
atlas = ExtResource( 5 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=258]
atlas = ExtResource( 5 )
region = Rect2( 384, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=259]
atlas = ExtResource( 5 )
region = Rect2( 512, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=260]
atlas = ExtResource( 5 )
region = Rect2( 640, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=261]
atlas = ExtResource( 5 )
region = Rect2( 768, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=262]
atlas = ExtResource( 5 )
region = Rect2( 896, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=263]
atlas = ExtResource( 5 )
region = Rect2( 1024, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=264]
atlas = ExtResource( 5 )
region = Rect2( 1152, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=265]
atlas = ExtResource( 5 )
region = Rect2( 1280, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=266]
atlas = ExtResource( 5 )
region = Rect2( 1408, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=267]
atlas = ExtResource( 5 )
region = Rect2( 1536, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=268]
atlas = ExtResource( 5 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=269]
atlas = ExtResource( 5 )
region = Rect2( 128, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=270]
atlas = ExtResource( 5 )
region = Rect2( 256, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=271]
atlas = ExtResource( 5 )
region = Rect2( 384, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=272]
atlas = ExtResource( 5 )
region = Rect2( 512, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=273]
atlas = ExtResource( 5 )
region = Rect2( 640, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=274]
atlas = ExtResource( 5 )
region = Rect2( 768, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=275]
atlas = ExtResource( 5 )
region = Rect2( 896, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=276]
atlas = ExtResource( 5 )
region = Rect2( 1024, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=277]
atlas = ExtResource( 5 )
region = Rect2( 1152, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=278]
atlas = ExtResource( 5 )
region = Rect2( 1280, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=279]
atlas = ExtResource( 5 )
region = Rect2( 1408, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=280]
atlas = ExtResource( 5 )
region = Rect2( 1536, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=281]
atlas = ExtResource( 5 )
region = Rect2( 0, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=282]
atlas = ExtResource( 5 )
region = Rect2( 128, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=283]
atlas = ExtResource( 5 )
region = Rect2( 256, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=284]
atlas = ExtResource( 5 )
region = Rect2( 384, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=285]
atlas = ExtResource( 5 )
region = Rect2( 512, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=286]
atlas = ExtResource( 5 )
region = Rect2( 640, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=287]
atlas = ExtResource( 5 )
region = Rect2( 768, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=288]
atlas = ExtResource( 5 )
region = Rect2( 896, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=289]
atlas = ExtResource( 5 )
region = Rect2( 1024, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=290]
atlas = ExtResource( 5 )
region = Rect2( 1152, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=291]
atlas = ExtResource( 5 )
region = Rect2( 1280, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=292]
atlas = ExtResource( 5 )
region = Rect2( 1408, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=293]
atlas = ExtResource( 5 )
region = Rect2( 1536, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=294]
atlas = ExtResource( 5 )
region = Rect2( 0, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=295]
atlas = ExtResource( 5 )
region = Rect2( 128, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=296]
atlas = ExtResource( 5 )
region = Rect2( 256, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=297]
atlas = ExtResource( 5 )
region = Rect2( 384, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=298]
atlas = ExtResource( 5 )
region = Rect2( 512, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=299]
atlas = ExtResource( 5 )
region = Rect2( 640, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=300]
atlas = ExtResource( 5 )
region = Rect2( 768, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=301]
atlas = ExtResource( 5 )
region = Rect2( 896, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=302]
atlas = ExtResource( 5 )
region = Rect2( 1024, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=303]
atlas = ExtResource( 5 )
region = Rect2( 1152, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=304]
atlas = ExtResource( 5 )
region = Rect2( 1280, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=305]
atlas = ExtResource( 5 )
region = Rect2( 1408, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=306]
atlas = ExtResource( 5 )
region = Rect2( 1536, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=307]
atlas = ExtResource( 5 )
region = Rect2( 0, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=308]
atlas = ExtResource( 5 )
region = Rect2( 128, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=309]
atlas = ExtResource( 5 )
region = Rect2( 256, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=310]
atlas = ExtResource( 5 )
region = Rect2( 384, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=311]
atlas = ExtResource( 5 )
region = Rect2( 512, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=312]
atlas = ExtResource( 5 )
region = Rect2( 640, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=313]
atlas = ExtResource( 5 )
region = Rect2( 768, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=314]
atlas = ExtResource( 5 )
region = Rect2( 896, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=315]
atlas = ExtResource( 5 )
region = Rect2( 1024, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=316]
atlas = ExtResource( 5 )
region = Rect2( 1152, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=317]
atlas = ExtResource( 5 )
region = Rect2( 1280, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=318]
atlas = ExtResource( 5 )
region = Rect2( 1408, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=319]
atlas = ExtResource( 5 )
region = Rect2( 1536, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=320]
atlas = ExtResource( 5 )
region = Rect2( 0, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=321]
atlas = ExtResource( 5 )
region = Rect2( 128, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=322]
atlas = ExtResource( 5 )
region = Rect2( 256, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=323]
atlas = ExtResource( 5 )
region = Rect2( 384, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=324]
atlas = ExtResource( 5 )
region = Rect2( 512, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=325]
atlas = ExtResource( 5 )
region = Rect2( 640, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=326]
atlas = ExtResource( 5 )
region = Rect2( 768, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=327]
atlas = ExtResource( 5 )
region = Rect2( 896, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=328]
atlas = ExtResource( 5 )
region = Rect2( 1024, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=329]
atlas = ExtResource( 5 )
region = Rect2( 1152, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=330]
atlas = ExtResource( 5 )
region = Rect2( 1280, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=331]
atlas = ExtResource( 5 )
region = Rect2( 1408, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=332]
atlas = ExtResource( 5 )
region = Rect2( 1536, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=333]
atlas = ExtResource( 5 )
region = Rect2( 0, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=334]
atlas = ExtResource( 5 )
region = Rect2( 128, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=335]
atlas = ExtResource( 5 )
region = Rect2( 256, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=336]
atlas = ExtResource( 5 )
region = Rect2( 384, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=337]
atlas = ExtResource( 5 )
region = Rect2( 512, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=338]
atlas = ExtResource( 5 )
region = Rect2( 640, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=339]
atlas = ExtResource( 5 )
region = Rect2( 768, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=340]
atlas = ExtResource( 5 )
region = Rect2( 896, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=341]
atlas = ExtResource( 5 )
region = Rect2( 1024, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=342]
atlas = ExtResource( 5 )
region = Rect2( 1152, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=343]
atlas = ExtResource( 5 )
region = Rect2( 1280, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=344]
atlas = ExtResource( 5 )
region = Rect2( 1408, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=345]
atlas = ExtResource( 5 )
region = Rect2( 1536, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=346]
atlas = ExtResource( 5 )
region = Rect2( 0, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=347]
atlas = ExtResource( 5 )
region = Rect2( 128, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=348]
atlas = ExtResource( 5 )
region = Rect2( 256, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=349]
atlas = ExtResource( 5 )
region = Rect2( 384, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=350]
atlas = ExtResource( 5 )
region = Rect2( 512, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=351]
atlas = ExtResource( 5 )
region = Rect2( 640, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=352]
atlas = ExtResource( 5 )
region = Rect2( 768, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=353]
atlas = ExtResource( 5 )
region = Rect2( 896, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=354]
atlas = ExtResource( 5 )
region = Rect2( 1024, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=355]
atlas = ExtResource( 5 )
region = Rect2( 1152, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=356]
atlas = ExtResource( 5 )
region = Rect2( 1280, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=357]
atlas = ExtResource( 5 )
region = Rect2( 1408, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=358]
atlas = ExtResource( 5 )
region = Rect2( 1536, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=359]
atlas = ExtResource( 5 )
region = Rect2( 0, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=360]
atlas = ExtResource( 5 )
region = Rect2( 128, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=361]
atlas = ExtResource( 5 )
region = Rect2( 256, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=362]
atlas = ExtResource( 5 )
region = Rect2( 384, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=363]
atlas = ExtResource( 5 )
region = Rect2( 512, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=364]
atlas = ExtResource( 5 )
region = Rect2( 640, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=365]
atlas = ExtResource( 5 )
region = Rect2( 768, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=366]
atlas = ExtResource( 5 )
region = Rect2( 896, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=367]
atlas = ExtResource( 5 )
region = Rect2( 1024, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=368]
atlas = ExtResource( 5 )
region = Rect2( 1152, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=369]
atlas = ExtResource( 5 )
region = Rect2( 1280, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=370]
atlas = ExtResource( 5 )
region = Rect2( 1408, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=371]
atlas = ExtResource( 5 )
region = Rect2( 1536, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=372]
atlas = ExtResource( 5 )
region = Rect2( 0, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=373]
atlas = ExtResource( 5 )
region = Rect2( 128, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=374]
atlas = ExtResource( 5 )
region = Rect2( 256, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=375]
atlas = ExtResource( 5 )
region = Rect2( 384, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=376]
atlas = ExtResource( 5 )
region = Rect2( 512, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=377]
atlas = ExtResource( 5 )
region = Rect2( 640, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=378]
atlas = ExtResource( 5 )
region = Rect2( 768, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=379]
atlas = ExtResource( 5 )
region = Rect2( 896, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=380]
atlas = ExtResource( 5 )
region = Rect2( 1024, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=381]
atlas = ExtResource( 5 )
region = Rect2( 1152, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=382]
atlas = ExtResource( 5 )
region = Rect2( 1280, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=383]
atlas = ExtResource( 5 )
region = Rect2( 1408, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=384]
atlas = ExtResource( 5 )
region = Rect2( 1536, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=385]
atlas = ExtResource( 5 )
region = Rect2( 0, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=386]
atlas = ExtResource( 5 )
region = Rect2( 128, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=387]
atlas = ExtResource( 5 )
region = Rect2( 256, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=388]
atlas = ExtResource( 5 )
region = Rect2( 384, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=389]
atlas = ExtResource( 5 )
region = Rect2( 512, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=390]
atlas = ExtResource( 5 )
region = Rect2( 640, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=391]
atlas = ExtResource( 5 )
region = Rect2( 768, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=392]
atlas = ExtResource( 5 )
region = Rect2( 896, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=393]
atlas = ExtResource( 5 )
region = Rect2( 1024, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=394]
atlas = ExtResource( 5 )
region = Rect2( 1152, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=395]
atlas = ExtResource( 5 )
region = Rect2( 1280, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=396]
atlas = ExtResource( 5 )
region = Rect2( 1408, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=397]
atlas = ExtResource( 5 )
region = Rect2( 1536, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=398]
atlas = ExtResource( 5 )
region = Rect2( 0, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=399]
atlas = ExtResource( 5 )
region = Rect2( 128, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=400]
atlas = ExtResource( 5 )
region = Rect2( 256, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=401]
atlas = ExtResource( 5 )
region = Rect2( 384, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=402]
atlas = ExtResource( 5 )
region = Rect2( 512, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=403]
atlas = ExtResource( 5 )
region = Rect2( 640, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=404]
atlas = ExtResource( 5 )
region = Rect2( 768, 1408, 128, 128 )

[sub_resource type="SpriteFrames" id=64]
animations = [ {
"frames": [ SubResource( 255 ), SubResource( 256 ), SubResource( 257 ), SubResource( 258 ), SubResource( 259 ), SubResource( 260 ), SubResource( 261 ), SubResource( 262 ), SubResource( 263 ), SubResource( 264 ), SubResource( 265 ), SubResource( 266 ), SubResource( 267 ), SubResource( 268 ), SubResource( 269 ), SubResource( 270 ), SubResource( 271 ), SubResource( 272 ), SubResource( 273 ), SubResource( 274 ), SubResource( 275 ), SubResource( 276 ), SubResource( 277 ), SubResource( 278 ), SubResource( 279 ), SubResource( 280 ), SubResource( 281 ), SubResource( 282 ), SubResource( 283 ), SubResource( 284 ), SubResource( 285 ), SubResource( 286 ), SubResource( 287 ), SubResource( 288 ), SubResource( 289 ), SubResource( 290 ), SubResource( 291 ), SubResource( 292 ), SubResource( 293 ), SubResource( 294 ), SubResource( 295 ), SubResource( 296 ), SubResource( 297 ), SubResource( 298 ), SubResource( 299 ), SubResource( 300 ), SubResource( 301 ), SubResource( 302 ), SubResource( 303 ), SubResource( 304 ), SubResource( 305 ), SubResource( 306 ), SubResource( 307 ), SubResource( 308 ), SubResource( 309 ), SubResource( 310 ), SubResource( 311 ), SubResource( 312 ), SubResource( 313 ), SubResource( 314 ), SubResource( 315 ), SubResource( 316 ), SubResource( 317 ), SubResource( 318 ), SubResource( 319 ), SubResource( 320 ), SubResource( 321 ), SubResource( 322 ), SubResource( 323 ), SubResource( 324 ), SubResource( 325 ), SubResource( 326 ), SubResource( 327 ), SubResource( 328 ), SubResource( 329 ), SubResource( 330 ), SubResource( 331 ), SubResource( 332 ), SubResource( 333 ), SubResource( 334 ), SubResource( 335 ), SubResource( 336 ), SubResource( 337 ), SubResource( 338 ), SubResource( 339 ), SubResource( 340 ), SubResource( 341 ), SubResource( 342 ), SubResource( 343 ), SubResource( 344 ), SubResource( 345 ), SubResource( 346 ), SubResource( 347 ), SubResource( 348 ), SubResource( 349 ), SubResource( 350 ), SubResource( 351 ), SubResource( 352 ), SubResource( 353 ), SubResource( 354 ), SubResource( 355 ), SubResource( 356 ), SubResource( 357 ), SubResource( 358 ), SubResource( 359 ), SubResource( 360 ), SubResource( 361 ), SubResource( 362 ), SubResource( 363 ), SubResource( 364 ), SubResource( 365 ), SubResource( 366 ), SubResource( 367 ), SubResource( 368 ), SubResource( 369 ), SubResource( 370 ), SubResource( 371 ), SubResource( 372 ), SubResource( 373 ), SubResource( 374 ), SubResource( 375 ), SubResource( 376 ), SubResource( 377 ), SubResource( 378 ), SubResource( 379 ), SubResource( 380 ), SubResource( 381 ), SubResource( 382 ), SubResource( 383 ), SubResource( 384 ), SubResource( 385 ), SubResource( 386 ), SubResource( 387 ), SubResource( 388 ), SubResource( 389 ), SubResource( 390 ), SubResource( 391 ), SubResource( 392 ), SubResource( 393 ), SubResource( 394 ), SubResource( 395 ), SubResource( 396 ), SubResource( 397 ), SubResource( 398 ), SubResource( 399 ), SubResource( 400 ), SubResource( 401 ), SubResource( 402 ), SubResource( 403 ), SubResource( 404 ) ],
"loop": true,
"name": "Default",
"speed": 60.0
} ]

[sub_resource type="AtlasTexture" id=104]
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=105]
atlas = ExtResource( 7 )
region = Rect2( 128, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=106]
atlas = ExtResource( 7 )
region = Rect2( 256, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=107]
atlas = ExtResource( 7 )
region = Rect2( 384, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=108]
atlas = ExtResource( 7 )
region = Rect2( 512, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=109]
atlas = ExtResource( 7 )
region = Rect2( 640, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=110]
atlas = ExtResource( 7 )
region = Rect2( 768, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=111]
atlas = ExtResource( 7 )
region = Rect2( 896, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=112]
atlas = ExtResource( 7 )
region = Rect2( 1024, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=113]
atlas = ExtResource( 7 )
region = Rect2( 1152, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=114]
atlas = ExtResource( 7 )
region = Rect2( 1280, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=115]
atlas = ExtResource( 7 )
region = Rect2( 1408, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=116]
atlas = ExtResource( 7 )
region = Rect2( 1536, 0, 128, 128 )

[sub_resource type="AtlasTexture" id=117]
atlas = ExtResource( 7 )
region = Rect2( 0, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=118]
atlas = ExtResource( 7 )
region = Rect2( 128, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=119]
atlas = ExtResource( 7 )
region = Rect2( 256, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=120]
atlas = ExtResource( 7 )
region = Rect2( 384, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=121]
atlas = ExtResource( 7 )
region = Rect2( 512, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=122]
atlas = ExtResource( 7 )
region = Rect2( 640, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=123]
atlas = ExtResource( 7 )
region = Rect2( 768, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=124]
atlas = ExtResource( 7 )
region = Rect2( 896, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=125]
atlas = ExtResource( 7 )
region = Rect2( 1024, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=126]
atlas = ExtResource( 7 )
region = Rect2( 1152, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=127]
atlas = ExtResource( 7 )
region = Rect2( 1280, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=128]
atlas = ExtResource( 7 )
region = Rect2( 1408, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=129]
atlas = ExtResource( 7 )
region = Rect2( 1536, 128, 128, 128 )

[sub_resource type="AtlasTexture" id=130]
atlas = ExtResource( 7 )
region = Rect2( 0, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=131]
atlas = ExtResource( 7 )
region = Rect2( 128, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=132]
atlas = ExtResource( 7 )
region = Rect2( 256, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=133]
atlas = ExtResource( 7 )
region = Rect2( 384, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=134]
atlas = ExtResource( 7 )
region = Rect2( 512, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=135]
atlas = ExtResource( 7 )
region = Rect2( 640, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=136]
atlas = ExtResource( 7 )
region = Rect2( 768, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=137]
atlas = ExtResource( 7 )
region = Rect2( 896, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=138]
atlas = ExtResource( 7 )
region = Rect2( 1024, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=139]
atlas = ExtResource( 7 )
region = Rect2( 1152, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=140]
atlas = ExtResource( 7 )
region = Rect2( 1280, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=141]
atlas = ExtResource( 7 )
region = Rect2( 1408, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=142]
atlas = ExtResource( 7 )
region = Rect2( 1536, 256, 128, 128 )

[sub_resource type="AtlasTexture" id=143]
atlas = ExtResource( 7 )
region = Rect2( 0, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=144]
atlas = ExtResource( 7 )
region = Rect2( 128, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=145]
atlas = ExtResource( 7 )
region = Rect2( 256, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=146]
atlas = ExtResource( 7 )
region = Rect2( 384, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=147]
atlas = ExtResource( 7 )
region = Rect2( 512, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=148]
atlas = ExtResource( 7 )
region = Rect2( 640, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=149]
atlas = ExtResource( 7 )
region = Rect2( 768, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=150]
atlas = ExtResource( 7 )
region = Rect2( 896, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=151]
atlas = ExtResource( 7 )
region = Rect2( 1024, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=152]
atlas = ExtResource( 7 )
region = Rect2( 1152, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=153]
atlas = ExtResource( 7 )
region = Rect2( 1280, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=154]
atlas = ExtResource( 7 )
region = Rect2( 1408, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=155]
atlas = ExtResource( 7 )
region = Rect2( 1536, 384, 128, 128 )

[sub_resource type="AtlasTexture" id=156]
atlas = ExtResource( 7 )
region = Rect2( 0, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=157]
atlas = ExtResource( 7 )
region = Rect2( 128, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=158]
atlas = ExtResource( 7 )
region = Rect2( 256, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=159]
atlas = ExtResource( 7 )
region = Rect2( 384, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=160]
atlas = ExtResource( 7 )
region = Rect2( 512, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=161]
atlas = ExtResource( 7 )
region = Rect2( 640, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=162]
atlas = ExtResource( 7 )
region = Rect2( 768, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=163]
atlas = ExtResource( 7 )
region = Rect2( 896, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=164]
atlas = ExtResource( 7 )
region = Rect2( 1024, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=165]
atlas = ExtResource( 7 )
region = Rect2( 1152, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=166]
atlas = ExtResource( 7 )
region = Rect2( 1280, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=167]
atlas = ExtResource( 7 )
region = Rect2( 1408, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=168]
atlas = ExtResource( 7 )
region = Rect2( 1536, 512, 128, 128 )

[sub_resource type="AtlasTexture" id=169]
atlas = ExtResource( 7 )
region = Rect2( 0, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=170]
atlas = ExtResource( 7 )
region = Rect2( 128, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=171]
atlas = ExtResource( 7 )
region = Rect2( 256, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=172]
atlas = ExtResource( 7 )
region = Rect2( 384, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=173]
atlas = ExtResource( 7 )
region = Rect2( 512, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=174]
atlas = ExtResource( 7 )
region = Rect2( 640, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=175]
atlas = ExtResource( 7 )
region = Rect2( 768, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=176]
atlas = ExtResource( 7 )
region = Rect2( 896, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=177]
atlas = ExtResource( 7 )
region = Rect2( 1024, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=178]
atlas = ExtResource( 7 )
region = Rect2( 1152, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=179]
atlas = ExtResource( 7 )
region = Rect2( 1280, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=180]
atlas = ExtResource( 7 )
region = Rect2( 1408, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=181]
atlas = ExtResource( 7 )
region = Rect2( 1536, 640, 128, 128 )

[sub_resource type="AtlasTexture" id=182]
atlas = ExtResource( 7 )
region = Rect2( 0, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=183]
atlas = ExtResource( 7 )
region = Rect2( 128, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=184]
atlas = ExtResource( 7 )
region = Rect2( 256, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=185]
atlas = ExtResource( 7 )
region = Rect2( 384, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=186]
atlas = ExtResource( 7 )
region = Rect2( 512, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=187]
atlas = ExtResource( 7 )
region = Rect2( 640, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=188]
atlas = ExtResource( 7 )
region = Rect2( 768, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=189]
atlas = ExtResource( 7 )
region = Rect2( 896, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=190]
atlas = ExtResource( 7 )
region = Rect2( 1024, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=191]
atlas = ExtResource( 7 )
region = Rect2( 1152, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=192]
atlas = ExtResource( 7 )
region = Rect2( 1280, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=193]
atlas = ExtResource( 7 )
region = Rect2( 1408, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=194]
atlas = ExtResource( 7 )
region = Rect2( 1536, 768, 128, 128 )

[sub_resource type="AtlasTexture" id=195]
atlas = ExtResource( 7 )
region = Rect2( 0, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=196]
atlas = ExtResource( 7 )
region = Rect2( 128, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=197]
atlas = ExtResource( 7 )
region = Rect2( 256, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=198]
atlas = ExtResource( 7 )
region = Rect2( 384, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=199]
atlas = ExtResource( 7 )
region = Rect2( 512, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=200]
atlas = ExtResource( 7 )
region = Rect2( 640, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=201]
atlas = ExtResource( 7 )
region = Rect2( 768, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=202]
atlas = ExtResource( 7 )
region = Rect2( 896, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=203]
atlas = ExtResource( 7 )
region = Rect2( 1024, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=204]
atlas = ExtResource( 7 )
region = Rect2( 1152, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=205]
atlas = ExtResource( 7 )
region = Rect2( 1280, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=206]
atlas = ExtResource( 7 )
region = Rect2( 1408, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=207]
atlas = ExtResource( 7 )
region = Rect2( 1536, 896, 128, 128 )

[sub_resource type="AtlasTexture" id=208]
atlas = ExtResource( 7 )
region = Rect2( 0, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=209]
atlas = ExtResource( 7 )
region = Rect2( 128, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=210]
atlas = ExtResource( 7 )
region = Rect2( 256, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=211]
atlas = ExtResource( 7 )
region = Rect2( 384, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=212]
atlas = ExtResource( 7 )
region = Rect2( 512, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=213]
atlas = ExtResource( 7 )
region = Rect2( 640, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=214]
atlas = ExtResource( 7 )
region = Rect2( 768, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=215]
atlas = ExtResource( 7 )
region = Rect2( 896, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=216]
atlas = ExtResource( 7 )
region = Rect2( 1024, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=217]
atlas = ExtResource( 7 )
region = Rect2( 1152, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=218]
atlas = ExtResource( 7 )
region = Rect2( 1280, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=219]
atlas = ExtResource( 7 )
region = Rect2( 1408, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=220]
atlas = ExtResource( 7 )
region = Rect2( 1536, 1024, 128, 128 )

[sub_resource type="AtlasTexture" id=221]
atlas = ExtResource( 7 )
region = Rect2( 0, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=222]
atlas = ExtResource( 7 )
region = Rect2( 128, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=223]
atlas = ExtResource( 7 )
region = Rect2( 256, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=224]
atlas = ExtResource( 7 )
region = Rect2( 384, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=225]
atlas = ExtResource( 7 )
region = Rect2( 512, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=226]
atlas = ExtResource( 7 )
region = Rect2( 640, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=227]
atlas = ExtResource( 7 )
region = Rect2( 768, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=228]
atlas = ExtResource( 7 )
region = Rect2( 896, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=229]
atlas = ExtResource( 7 )
region = Rect2( 1024, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=230]
atlas = ExtResource( 7 )
region = Rect2( 1152, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=231]
atlas = ExtResource( 7 )
region = Rect2( 1280, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=232]
atlas = ExtResource( 7 )
region = Rect2( 1408, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=233]
atlas = ExtResource( 7 )
region = Rect2( 1536, 1152, 128, 128 )

[sub_resource type="AtlasTexture" id=234]
atlas = ExtResource( 7 )
region = Rect2( 0, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=235]
atlas = ExtResource( 7 )
region = Rect2( 128, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=236]
atlas = ExtResource( 7 )
region = Rect2( 256, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=237]
atlas = ExtResource( 7 )
region = Rect2( 384, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=238]
atlas = ExtResource( 7 )
region = Rect2( 512, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=239]
atlas = ExtResource( 7 )
region = Rect2( 640, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=240]
atlas = ExtResource( 7 )
region = Rect2( 768, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=241]
atlas = ExtResource( 7 )
region = Rect2( 896, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=242]
atlas = ExtResource( 7 )
region = Rect2( 1024, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=243]
atlas = ExtResource( 7 )
region = Rect2( 1152, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=244]
atlas = ExtResource( 7 )
region = Rect2( 1280, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=245]
atlas = ExtResource( 7 )
region = Rect2( 1408, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=246]
atlas = ExtResource( 7 )
region = Rect2( 1536, 1280, 128, 128 )

[sub_resource type="AtlasTexture" id=247]
atlas = ExtResource( 7 )
region = Rect2( 0, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=248]
atlas = ExtResource( 7 )
region = Rect2( 128, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=249]
atlas = ExtResource( 7 )
region = Rect2( 256, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=250]
atlas = ExtResource( 7 )
region = Rect2( 384, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=251]
atlas = ExtResource( 7 )
region = Rect2( 512, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=252]
atlas = ExtResource( 7 )
region = Rect2( 640, 1408, 128, 128 )

[sub_resource type="AtlasTexture" id=253]
atlas = ExtResource( 7 )
region = Rect2( 768, 1408, 128, 128 )

[sub_resource type="SpriteFrames" id=254]
animations = [ {
"frames": [ SubResource( 104 ), SubResource( 105 ), SubResource( 106 ), SubResource( 107 ), SubResource( 108 ), SubResource( 109 ), SubResource( 110 ), SubResource( 111 ), SubResource( 112 ), SubResource( 113 ), SubResource( 114 ), SubResource( 115 ), SubResource( 116 ), SubResource( 117 ), SubResource( 118 ), SubResource( 119 ), SubResource( 120 ), SubResource( 121 ), SubResource( 122 ), SubResource( 123 ), SubResource( 124 ), SubResource( 125 ), SubResource( 126 ), SubResource( 127 ), SubResource( 128 ), SubResource( 129 ), SubResource( 130 ), SubResource( 131 ), SubResource( 132 ), SubResource( 133 ), SubResource( 134 ), SubResource( 135 ), SubResource( 136 ), SubResource( 137 ), SubResource( 138 ), SubResource( 139 ), SubResource( 140 ), SubResource( 141 ), SubResource( 142 ), SubResource( 143 ), SubResource( 144 ), SubResource( 145 ), SubResource( 146 ), SubResource( 147 ), SubResource( 148 ), SubResource( 149 ), SubResource( 150 ), SubResource( 151 ), SubResource( 152 ), SubResource( 153 ), SubResource( 154 ), SubResource( 155 ), SubResource( 156 ), SubResource( 157 ), SubResource( 158 ), SubResource( 159 ), SubResource( 160 ), SubResource( 161 ), SubResource( 162 ), SubResource( 163 ), SubResource( 164 ), SubResource( 165 ), SubResource( 166 ), SubResource( 167 ), SubResource( 168 ), SubResource( 169 ), SubResource( 170 ), SubResource( 171 ), SubResource( 172 ), SubResource( 173 ), SubResource( 174 ), SubResource( 175 ), SubResource( 176 ), SubResource( 177 ), SubResource( 178 ), SubResource( 179 ), SubResource( 180 ), SubResource( 181 ), SubResource( 182 ), SubResource( 183 ), SubResource( 184 ), SubResource( 185 ), SubResource( 186 ), SubResource( 187 ), SubResource( 188 ), SubResource( 189 ), SubResource( 190 ), SubResource( 191 ), SubResource( 192 ), SubResource( 193 ), SubResource( 194 ), SubResource( 195 ), SubResource( 196 ), SubResource( 197 ), SubResource( 198 ), SubResource( 199 ), SubResource( 200 ), SubResource( 201 ), SubResource( 202 ), SubResource( 203 ), SubResource( 204 ), SubResource( 205 ), SubResource( 206 ), SubResource( 207 ), SubResource( 208 ), SubResource( 209 ), SubResource( 210 ), SubResource( 211 ), SubResource( 212 ), SubResource( 213 ), SubResource( 214 ), SubResource( 215 ), SubResource( 216 ), SubResource( 217 ), SubResource( 218 ), SubResource( 219 ), SubResource( 220 ), SubResource( 221 ), SubResource( 222 ), SubResource( 223 ), SubResource( 224 ), SubResource( 225 ), SubResource( 226 ), SubResource( 227 ), SubResource( 228 ), SubResource( 229 ), SubResource( 230 ), SubResource( 231 ), SubResource( 232 ), SubResource( 233 ), SubResource( 234 ), SubResource( 235 ), SubResource( 236 ), SubResource( 237 ), SubResource( 238 ), SubResource( 239 ), SubResource( 240 ), SubResource( 241 ), SubResource( 242 ), SubResource( 243 ), SubResource( 244 ), SubResource( 245 ), SubResource( 246 ), SubResource( 247 ), SubResource( 248 ), SubResource( 249 ), SubResource( 250 ), SubResource( 251 ), SubResource( 252 ), SubResource( 253 ) ],
"loop": true,
"name": "default",
"speed": 60.0
} ]

[sub_resource type="Environment" id=1]
background_mode = 4
glow_enabled = true
glow_levels/1 = true
glow_levels/2 = true
glow_levels/4 = true
glow_intensity = 1.5
glow_strength = 0.85
glow_blend_mode = 1
glow_hdr_threshold = 0.95
glow_hdr_scale = 1.0
glow_bicubic_upscale = true
adjustment_brightness = 0.9

[sub_resource type="Animation" id=427]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.321569, 0.823529, 1, 1 ) ]
}

[sub_resource type="Animation" id=428]
resource_name = "blue_to_red"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.321569, 0.823529, 1, 1 ), Color( 0.894118, 0.360784, 0.372549, 1 ) ]
}

[sub_resource type="Animation" id=429]
resource_name = "red_to_blue"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.894118, 0.360784, 0.372549, 1 ), Color( 0.321569, 0.823529, 1, 1 ) ]
}

[sub_resource type="GDScript" id=430]
script/source = "extends Control

func _input(event):
	if event.is_action_pressed(\"pause\"):
		var new_pause_state = not get_tree().paused
		get_tree().paused = new_pause_state
		self.visible = new_pause_state
"

[sub_resource type="Animation" id=425]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.05 ]
}

[sub_resource type="Animation" id=426]
resource_name = "Spawn"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/circle_size")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.05 ]
}

[sub_resource type="Shader" id=423]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/VHS-and-CRT-monitor-effect

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

//*** IMPORTANT! ***/ 
// - If you are using this shader to affect the node it is applied to set 'overlay' to false (unchecked in the instepctor).
// - If you are using this shader as an overlay, and want the shader to affect the nodes below in the Scene hierarchy,
//   set 'overlay' to true (checked in the inspector).
// On Mac there is potentially a bug causing this to not work properly. If that is the case and you want to use the shader as an overlay
// change all \"overlay ? SCREEN_TEXTURE : TEXTURE\" to only \"SCREEN_TEXTURE\" on lines 129-140, and \"vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV);\"
// to \"vec2 uv = warp(SCREEN_UV);\" on line 98.
uniform bool overlay = false;

uniform float scanlines_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float scanlines_width : hint_range(0.0, 0.5) = 0.25;
uniform float grille_opacity : hint_range(0.0, 1.0) = 0.3;
uniform vec2 resolution = vec2(640.0, 480.0); // Set the number of rows and columns the texture will be divided in. Scanlines and grille will make a square based on these values

uniform bool pixelate = true; // Fill each square (\"pixel\") with a sampled color, creating a pixel look and a more accurate representation of how a CRT monitor would work.

uniform bool roll = true;
uniform float roll_speed = 8.0; // Positive values are down, negative are up
uniform float roll_size : hint_range(0.0, 100.0) = 15.0;
uniform float roll_variation : hint_range(0.1, 5.0) = 1.8; // This valie is not an exact science. You have to play around with the value to find a look you like. How this works is explained in the code below.
uniform float distort_intensity : hint_range(0.0, 0.2) = 0.05; // The distortion created by the rolling effect.

uniform float noise_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float noise_speed = 5.0; // There is a movement in the noise pattern that can be hard to see first. This sets the speed of that movement.

uniform float static_noise_intensity : hint_range(0.0, 1.0) = 0.06;

uniform float aberration : hint_range(-1.0, 1.0) = 0.03; // Chromatic aberration, a distortion on each color channel.
uniform float brightness = 1.4; // When adding scanline gaps and grille the image can get very dark. Brightness tries to compensate for that.
uniform bool discolor = true; // Add a discolor effect simulating a VHS

uniform float warp_amount :hint_range(0.0, 5.0) = 1.0; // Warp the texture edges simulating the curved glass of a CRT monitor or old TV.
uniform bool clip_warp = false;

uniform float vignette_intensity = 0.4; // Size of the vignette, how far towards the middle it should go.
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;

// Used by the noise functin to generate a pseudo random value between 0.0 and 1.0
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

// Generate a Perlin noise used by the distortion effects
float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

// Takes in the UV and warps the edges, creating the spherized effect
vec2 warp(vec2 uv){
	vec2 delta = uv - 0.5;
	float delta2 = dot(delta.xy, delta.xy);
	float delta4 = delta2 * delta2;
	float delta_offset = delta4 * warp_amount;
	
	return uv + delta * delta_offset;
}

// Adds a black border to hide stretched pixel created by the warp effect
float border (vec2 uv){
	float radius = min(warp_amount, 0.08);
	radius = max(min(min(abs(radius * 2.0), abs(1.0)), abs(1.0)), 1e-5);
	vec2 abs_uv = abs(uv * 2.0 - 1.0) - vec2(1.0, 1.0) + radius;
	float dist = length(max(vec2(0.0), abs_uv)) / radius;
	float square = smoothstep(0.96, 1.0, dist);
	return clamp(1.0 - square, 0.0, 1.0);
}

// Adds a vignette shadow to the edges of the image
float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment()
{
	vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV); // Warp the uv. uv will be used in most cases instead of UV to keep the warping
	vec2 text_uv = uv;
	vec2 roll_uv = vec2(0.0);
	float time = roll ? TIME : 0.0;
	

	// Pixelate the texture based on the given resolution.
	if (pixelate)
	{
		text_uv = ceil(uv * resolution) / resolution;
	}
	
	// Create the rolling effect. We need roll_line a bit later to make the noise effect.
	// That is why this runs if roll is true OR noise_opacity is over 0.
	float roll_line = 0.0;
	if (roll || noise_opacity > 0.0)
	{
		// Create the areas/lines where the texture will be distorted.
		roll_line = smoothstep(0.3, 0.9, sin(uv.y * roll_size - (time * roll_speed) ) );
		// Create more lines of a different size and apply to the first set of lines. This creates a bit of variation.
		roll_line *= roll_line * smoothstep(0.3, 0.9, sin(uv.y * roll_size * roll_variation - (time * roll_speed * roll_variation) ) );
		// Distort the UV where where the lines are
		roll_uv = vec2(( roll_line * distort_intensity * (1.-UV.x)), 0.0);
	}
	
	vec4 text;
	if (roll)
	{
		// If roll is true distort the texture with roll_uv. The texture is split up into RGB to 
		// make some chromatic aberration. We apply the aberration to the red and green channels accorging to the aberration parameter
		// and intensify it a bit in the roll distortion.
		text.r = texture(SCREEN_TEXTURE, text_uv + roll_uv * 0.8 + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv + roll_uv * 1.2 - vec2(aberration, 0.0) * .1 ).g;
		text.b = texture(SCREEN_TEXTURE, text_uv + roll_uv).b;
		text.a = 1.0;
	}
	else
	{
		// If roll is false only apply the aberration without any distorion. The aberration values are very small so the .1 is only 
		// to make the slider in the Inspector less sensitive.
		text.r = texture(SCREEN_TEXTURE, text_uv + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv - vec2(aberration, 0.0) * .1).g;
		text.b = texture(SCREEN_TEXTURE, text_uv).b;
		text.a = 1.0;
	}
	
	float r = text.r;
	float g = text.g;
	float b = text.b;
	
	uv = warp(UV);
	
	// CRT monitors don't have pixels but groups of red, green and blue dots or lines, called grille. We isolate the texture's color channels 
	// and divide it up in 3 offsetted lines to show the red, green and blue colors next to each other, with a small black gap between.
	if (grille_opacity > 0.0){
		
		float g_r = smoothstep(0.85, 0.95, abs(sin(uv.x * (resolution.x * 3.14159265))));
		r = mix(r, r * g_r, grille_opacity);
		
		float g_g = smoothstep(0.85, 0.95, abs(sin(1.05 + uv.x * (resolution.x * 3.14159265))));
		g = mix(g, g * g_g, grille_opacity);
		
		float b_b = smoothstep(0.85, 0.95, abs(sin(2.1 + uv.x * (resolution.x * 3.14159265))));
		b = mix(b, b * b_b, grille_opacity);
		
	}
	
	// Apply the grille to the texture's color channels and apply Brightness. Since the grille and the scanlines (below) make the image very dark you
	// can compensate by increasing the brightness.
	text.r = clamp(r * brightness, 0.0, 1.0);
	text.g = clamp(g * brightness, 0.0, 1.0);
	text.b = clamp(b * brightness, 0.0, 1.0);
	
	// Scanlines are the horizontal lines that make up the image on a CRT monitor. 
	// Here we are actual setting the black gap between each line, which I guess is not the right definition of the word, but you get the idea  
	float scanlines = 0.5;
	if (scanlines_opacity > 0.0)
	{
		// Same technique as above, create lines with sine and applying it to the texture. Smoothstep to allow setting the line size.
		scanlines = smoothstep(scanlines_width, scanlines_width + 0.5, abs(sin(uv.y * (resolution.y * 3.14159265))));
		text.rgb = mix(text.rgb, text.rgb * vec3(scanlines), scanlines_opacity);
	}
	
	// Apply the banded noise.
	if (noise_opacity > 0.0)
	{
		// Generate a noise pattern that is very stretched horizontally, and animate it with noise_speed
		float noise = smoothstep(0.4, 0.5, noise(uv * vec2(2.0, 200.0) + vec2(10.0, (TIME * (noise_speed))) ) );
		
		// We use roll_line (set above) to define how big the noise should be vertically (multiplying cuts off all black parts).
		// We also add in some basic noise with random() to break up the noise pattern above. The noise is sized according to 
		// the resolution value set in the inspector. If you don't like this look you can 
		// change \"ceil(uv * resolution) / resolution\" to only \"uv\" to make it less pixelated. Or multiply resolution with som value
		// greater than 1.0 to make them smaller.
		roll_line *= noise * scanlines * clamp(random((ceil(uv * resolution) / resolution) + vec2(TIME * 0.8, 0.0)).x + 0.8, 0.0, 1.0);
		// Add it to the texture based on noise_opacity
		text.rgb = clamp(mix(text.rgb, text.rgb + roll_line, noise_opacity), vec3(0.0), vec3(1.0));
	}
	
	// Apply static noise by generating it over the whole screen in the same way as above
	if (static_noise_intensity > 0.0)
	{
		text.rgb += clamp(random((ceil(uv * resolution) / resolution) + fract(TIME)).x, 0.0, 1.0) * static_noise_intensity;
	}
	
	// Apply a black border to hide imperfections caused by the warping.
	// Also apply the vignette
	text.rgb *= border(uv);
	text.rgb *= vignette(uv);
	// Hides the black border and make that area transparent. Good if you want to add the the texture on top an image of a TV or monitor.
	if (clip_warp)
	{
		text.a = border(uv);
	}
	
	// Apply discoloration to get a VHS look (lower saturation and higher contrast)
	// You can play with the values below or expose them in the Inspector.
	float saturation = 0.5;
	float contrast = 1.2;
	if (discolor)
	{
		// Saturation
		vec3 greyscale = vec3(text.r + text.g + text.b) / 3.;
		text.rgb = mix(text.rgb, greyscale, saturation);
		
		// Contrast
		float midpoint = pow(0.5, 2.2);
		text.rgb = (text.rgb - vec3(midpoint)) * contrast + midpoint;
	}
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=424]
shader = SubResource( 423 )
shader_param/overlay = true
shader_param/scanlines_opacity = 0.0
shader_param/scanlines_width = 0.0
shader_param/grille_opacity = 0.0
shader_param/resolution = Vector2( 336, 192 )
shader_param/pixelate = false
shader_param/roll = true
shader_param/roll_speed = 8.0
shader_param/roll_size = 15.0
shader_param/roll_variation = 0.1
shader_param/distort_intensity = 0.0
shader_param/noise_opacity = 0.02
shader_param/noise_speed = 10.0
shader_param/static_noise_intensity = 0.001
shader_param/aberration = 0.005
shader_param/brightness = 1.0
shader_param/discolor = false
shader_param/warp_amount = 0.2
shader_param/clip_warp = true
shader_param/vignette_intensity = 0.4
shader_param/vignette_opacity = 0.5

[node name="Main" type="Node2D"]
__meta__ = {
"_edit_lock_": true
}

[node name="Grid" type="TileMap" parent="."]
position = Vector2( 89, 16 )
cell_size = Vector2( 16, 16 )
cell_quadrant_size = 10
format = 1
script = ExtResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Music" type="ColorRect" parent="Grid"]
visible = false
material = SubResource( 408 )
margin_left = -89.0
margin_top = 32.0
margin_right = 247.0
margin_bottom = 128.0

[node name="Grid Visualiser" type="Node2D" parent="Grid"]
visible = false
script = ExtResource( 2 )

[node name="GridSprite" type="Sprite" parent="Grid"]
modulate = Color( 1, 1, 1, 0.25098 )
z_index = -10
texture = ExtResource( 3 )
centered = false
__meta__ = {
"_edit_lock_": true
}

[node name="Border" type="Sprite" parent="Grid"]
modulate = Color( 1.3, 1.3, 1.3, 1 )
position = Vector2( -2, -2 )
texture = ExtResource( 4 )
centered = false

[node name="Background" type="Node2D" parent="Grid"]
position = Vector2( -276, -44 )
scale = Vector2( 3.64437, 3.15803 )
z_index = -12
__meta__ = {
"_edit_lock_": true
}

[node name="skybox" type="ColorRect" parent="Grid/Background"]
margin_left = -334.0
margin_top = -224.0
margin_right = 581.0
margin_bottom = 376.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Coords" type="Sprite" parent="Grid"]
modulate = Color( 1.10196, 1.10196, 1.10196, 0.207843 )
texture = ExtResource( 10 )
centered = false
offset = Vector2( -16, -16 )

[node name="UI" type="Node2D" parent="."]
z_index = 1
__meta__ = {
"_edit_lock_": true
}

[node name="WinTitles" type="Node2D" parent="UI"]
z_index = 15
script = ExtResource( 6 )
__meta__ = {
"_edit_lock_": true
}

[node name="P1Win" type="AnimatedSprite" parent="UI/WinTitles"]
visible = false
modulate = Color( 1, 1, 1.2, 1 )
position = Vector2( 168, 96 )
frames = SubResource( 64 )
animation = "Default"
frame = 32
playing = true

[node name="P2Win" type="AnimatedSprite" parent="UI/WinTitles"]
visible = false
modulate = Color( 1.2, 1, 1, 1 )
position = Vector2( 168, 96 )
frames = SubResource( 254 )
frame = 114
playing = true

[node name="Timer" type="Timer" parent="UI/WinTitles"]
wait_time = 3.0

[node name="P1UI" type="Node2D" parent="UI"]

[node name="P1HealthBar" parent="UI/P1UI" instance=ExtResource( 8 )]
margin_left = 12.0
margin_top = 6.0
margin_right = 12.0
margin_bottom = 6.0

[node name="P1PowerBar" parent="UI/P1UI" instance=ExtResource( 12 )]
margin_left = 16.0
margin_top = 161.0
margin_right = 16.0
margin_bottom = 161.0

[node name="Icons" parent="UI/P1UI/P1PowerBar" index="2"]
frame = 4

[node name="P1PowerBar2" parent="UI/P1UI" instance=ExtResource( 12 )]
margin_left = 48.0
margin_top = 161.0
margin_right = 48.0
margin_bottom = 161.0
ability = 2

[node name="Icons" parent="UI/P1UI/P1PowerBar2" index="2"]
frame = 5

[node name="P2UI" type="Node2D" parent="UI"]

[node name="P2HealthBar" parent="UI/P2UI" instance=ExtResource( 9 )]
margin_left = 268.0
margin_top = 6.0
margin_right = 268.0
margin_bottom = 6.0

[node name="P2PowerBar" parent="UI/P2UI" instance=ExtResource( 15 )]
margin_left = 266.0
margin_top = 161.0
margin_right = 266.0
margin_bottom = 161.0

[node name="P2PowerBar2" parent="UI/P2UI" instance=ExtResource( 15 )]
margin_left = 298.0
margin_top = 161.0
margin_right = 298.0
margin_bottom = 161.0
ability = 2

[node name="Icons" parent="UI/P2UI/P2PowerBar2" index="2"]
frame = 3

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 10

[node name="TurnIndicator" type="Node2D" parent="CanvasLayer"]
modulate = Color( 1, 1, 1, 0.741176 )
self_modulate = Color( 0.894118, 0.360784, 0.372549, 1 )
show_behind_parent = true
light_mask = 0
position = Vector2( 169, 168 )
scale = Vector2( 1.1, 1 )
z_index = 1
script = ExtResource( 17 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer/TurnIndicator"]
autoplay = "RESET"
anims/RESET = SubResource( 427 )
anims/blue_to_red = SubResource( 428 )
anims/red_to_blue = SubResource( 429 )

[node name="Sprite" type="Sprite" parent="CanvasLayer/TurnIndicator"]
modulate = Color( 0.321569, 0.823529, 1, 1 )
position = Vector2( 0, -5 )
texture = ExtResource( 16 )

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
material = ExtResource( 11 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true
}

[node name="Pause" type="Control" parent="CanvasLayer"]
pause_mode = 2
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 430 )
__meta__ = {
"_edit_lock_": true
}

[node name="Overlay" type="ColorRect" parent="CanvasLayer/Pause"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0.501961 )

[node name="Sprite" type="Sprite" parent="CanvasLayer/Pause"]
position = Vector2( 168, 96 )
texture = ExtResource( 13 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="CanvasLayer"]
autoplay = "Spawn"
anims/RESET = SubResource( 425 )
anims/Spawn = SubResource( 426 )

[node name="CRT effect" type="ColorRect" parent="."]
material = SubResource( 424 )
margin_left = -810.0
margin_top = -274.0
margin_right = 1024.0
margin_bottom = 872.0
__meta__ = {
"_edit_lock_": true
}

[node name="Character Sprites" parent="." instance=ExtResource( 14 )]
position = Vector2( 40, 93 )
player = 1

[node name="Character Sprites2" parent="." instance=ExtResource( 14 )]
position = Vector2( 296, 93 )
player = 2

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2( 168, 96 )
current = true
__meta__ = {
"_edit_lock_": true
}

[connection signal="timeout" from="UI/WinTitles/Timer" to="UI/WinTitles" method="_on_Timer_timeout"]

[editable path="UI/P1UI/P1PowerBar"]
[editable path="UI/P1UI/P1PowerBar2"]
[editable path="UI/P2UI/P2PowerBar2"]
